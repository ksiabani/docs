{"/logging_monitoring":{"title":"📊 Logging & Monitoring AI Responses","data":{"":"","why-monitor-ai-responses#Why Monitor AI Responses?":"AI security doesn’t stop at real-time filtering. Effective logging & monitoring ensures:✅ Full visibility into AI decisions → Track why prompts were accepted or blocked.\n✅ Auditability & Compliance → Maintain a record of all AI interactions for security reviews.\n✅ Continuous AI improvement → Use log data to fine-tune AI behavior & policies.The AIandMe Firewall automatically logs every API request and response, enabling detailed post-analysis.","aiandme-firewall-logs#AIandMe Firewall Logs":"Each firewall API call generates a unique log_id, which you can use to retrieve detailed assessments later.📌 Example: Firewall Log Dashboard\n\n\n📌 Example: Detailed Log Analysis","retrieving-logs-via-api#Retrieving Logs via API":"You can fetch logs programmatically using the AIandMe API.","-request-format#🔹 Request Format":"Send a GET request with the log ID to retrieve the full AI analysis:\ncurl -X GET \"https://your-firewall-endpoint/logs/{log_id}\" \\\n-H \"Authorization: Bearer your-api-key\"","-python-example#🔹 Python Example":"Here’s how to retrieve AIandMe Firewall logs using Python:\nimport requests\n\nlog_id = \"your-log-id\"\napi_url = f\"https://your-firewall-endpoint/logs/{log_id}\"\nheaders = {\"Authorization\": \"Bearer your-api-key\"}\n\nresponse = requests.get(api_url, headers=headers)\n\nif response.status_code == 200:\nlog_data = response.json()\nprint(\"Log Details:\", log_data)\nelse:\nprint(\"Failed to retrieve log:\", response.status_code)","log-data-breakdown#Log Data Breakdown":"The API returns structured JSON data, containing:\nstatus → pass or fail\nfail_category → off_topic, violation, or restriction\nassessment_rationale → Explanation of why the prompt passed or failed\ntimestamp → When the request was processed\n\n📌 Example Response:\n{\n\"log_id\": \"123456\",\n\"status\": \"fail\",\n\"fail_category\": \"restriction\",\n\"assessment_rationale\": \"User attempted to request sensitive data.\",\n\"timestamp\": \"2025-01-26T13:45:00Z\"\n}","best-practices-for-ai-logging#Best Practices for AI Logging":"Regularly review logs → Identify patterns in AI failures.\nUse logs for model tuning → Improve accuracy based on failure cases.\nEnable alerts for critical failures → Automate responses to security violations.\n\n💡 Need help? Check out FAQs or Join the AIandMe Community."}},"/community":{"title":"🌍 Join the AIandMe Community","data":{"":"The AIandMe Community is the perfect place to:✅ Ask questions and get support from other developers.\n✅ Share your AI security experiences and best practices.\n✅ Stay updated on the latest AIandMe features and improvements.","-where-to-connect#📢 Where to Connect?":"🔹 Discord → Chat with AI enthusiasts & developers.\n🔹 GitHub → Contribute, report issues, and suggest features.\n🔹 AIandBeers Meetups → Join live discussions and webinars.","-get-involved#🔥 Get Involved":"💡 Found a bug or have a feature request? → Open an issue on GitHub.\n📖 Want to contribute? → Check out our open-source projects and submit pull requests.\n🔎 Looking for AI insights? → Join our community discussions and AI talks.💬 Have questions? Drop by our Discord and say hi! 🚀"}}}